var searchIndex = JSON.parse('{\
"booklibrs":{"doc":"","i":[[0,"books","booklibrs","",null,null],[0,"book","booklibrs::books","",null,null],[3,"Book","booklibrs::books::book","Simple Book structure, which contains title, author, …",null,null],[12,"the_book","","",0,null],[12,"is_using","","",0,null],[12,"cabinet","","",0,null],[12,"shelf","","",0,null],[12,"readers","","",0,null],[11,"new","","Constructs new simple book. By default it has no readers …",0,[[["rc",3],["app",3],["lang",4],["refcell",3]],["option",4]]],[11,"restore","","Constructs book with known params. It uses for load and …",0,[[["rc",3],["u16",15],["u8",15],["refcell",3],["bool",15]]]],[11,"title","","Gets title",0,[[],["string",3]]],[11,"author","","Gets author",0,[[],["string",3]]],[11,"pages","","Gets amount of pages",0,[[],["u16",15]]],[11,"find_reader_first","","Searches reader. If it isn\'t found, it\' ll return the …",0,[[["rc",3]],[["option",4],["usize",15]]]],[11,"find_reader_last","","Searches reader. If it isn\'t found, it\' ll return the …",0,[[["rc",3]],[["option",4],["usize",15]]]],[11,"remove_reader","","Removes reader",0,[[["reader",3]]]],[11,"remove_all_readers","","Removes all readers of book",0,[[]]],[11,"start_reading","","Function that uses after giving book to reader. It adds …",0,[[["date",3],["rc",3]]]],[11,"finish_reading","","Function that uses after returning book from reader. It …",0,[[],[["result",4],["u8",15]]]],[11,"change_location","","Changes cabinet\'s and shelf\'s number where book is …",0,[[["u16",15],["u8",15]]]],[11,"clone","","Clones simple book with new readers\' pointers",0,[[["rc",3],["refcell",3]]]],[11,"to_string","","Represent Book as String with next format:",0,[[["booksystem",3]],["string",3]]],[0,"book_sys","booklibrs::books","",null,null],[3,"BookSystem","booklibrs::books::book_sys","Reader Base structure, which contains only Book interfaces",null,null],[12,"books","","",1,null],[11,"new","","Constructs empty Book System",1,[[]]],[11,"find_book","","Finds The Book. If book is not found, it\' ll return …",1,[[["u16",15],["string",3]],[["option",4],["usize",15]]]],[11,"add_books_unchecked","","Adds simple books without any checks",1,[[["usize",15],["app",3],["lang",4]]]],[11,"add_books","","Adds simple books with strong guarantee",1,[[["usize",15],["app",3],["lang",4]],[["result",4],["u8",15]]]],[11,"add_book_unchecked","","Adds new TheBook and <strong>ONE</strong> simple (I think it\'s logical) No …",1,[[["usize",15],["string",3],["u16",15],["app",3],["lang",4]]]],[11,"add_book","","Adds new TheBook and <strong>ONE</strong> simple (I think it\'s logical)",1,[[["usize",15],["string",3],["u16",15],["app",3],["lang",4]],[["result",4],["u8",15]]]],[11,"remove_one_book_unchecked","","Remove one simple book by index without any checks",1,[[["usize",15]]]],[11,"remove_one_book","","Remove one simple book by index",1,[[["usize",15]],[["result",4],["u8",15]]]],[11,"remove_book_unchecked","","Removes TheBook and all simple books without any checks",1,[[["usize",15]]]],[11,"remove_book","","Removes TheBook and all simple books",1,[[["usize",15]],[["result",4],["u8",15]]]],[11,"change_title_unchecked","","Changes TheBook\'s and all simple books\' title without any …",1,[[["usize",15],["string",3]]]],[11,"change_title","","Changes TheBook\'s and all simple books\' title",1,[[["usize",15],["string",3]],[["result",4],["u8",15]]]],[11,"change_author_unchecked","","Changes TheBook\'s and all simple books\' title without any …",1,[[["usize",15],["string",3]]]],[11,"change_author","","Changes TheBook\'s and all simple books\' title",1,[[["usize",15],["string",3]],[["result",4],["u8",15]]]],[11,"change_pages_unchecked","","Changes TheBook\'s and all simple books\' title without any …",1,[[["usize",15],["u16",15]]]],[11,"change_pages","","Changes TheBook\'s and all simple books\' title",1,[[["usize",15],["string",3]],[["result",4],["u8",15]]]],[11,"change_location_unchecked","","Changes simple Book\'s location without any checks",1,[[["usize",15],["u16",15],["u8",15]]]],[11,"change_location","","Changes simple Book\'s location",1,[[["usize",15],["string",3]],[["result",4],["u8",15]]]],[11,"clear","","Deletes all books from current Book System (But not Books …",1,[[]]],[11,"clone","","Clones Book System with new smart pointers for The Book",1,[[["readerbase",3]]]],[11,"save","","Save to .yaml file",1,[[]]],[11,"load","","load from .yaml file",1,[[["readerbase",3]]]],[0,"date","booklibrs::books","",null,null],[3,"Date","booklibrs::books::date","Date structure, which contains day, month and year. It\'s …",null,null],[12,"day","","",2,null],[12,"month","","",2,null],[12,"year","","",2,null],[11,"new","","Constructs date. If date params are wrong, It will return …",2,[[["u16",15],["u8",15]],["result",4]]],[11,"correct","","Checks if date is correct according to real world",2,[[],["bool",15]]],[11,"to_string","","Converts date to string",2,[[],["string",3]]],[0,"genres","booklibrs::books","",null,null],[3,"Genres","booklibrs::books::genres","All existing genres.yaml of books",null,null],[12,"genres","","",3,null],[11,"new","","Creates empty set of genres.yaml",3,[[]]],[11,"add","","Adds new genre to set. If this genre is already exists, …",3,[[["string",3]],["bool",15]]],[11,"remove","","Removes genre from set. If this genre is found, it will …",3,[[["string",3]],["bool",15]]],[11,"clear","","Deletes all genres from current genres keeper",3,[[]]],[11,"save","","Saves all genres to yaml file",3,[[]]],[11,"load","","Loads from yaml file",3,[[]]],[0,"the_book","booklibrs::books","",null,null],[3,"TheBook","booklibrs::books::the_book","Interface Book structure, which contains title, author, …",null,null],[12,"title","","",4,null],[12,"author","","",4,null],[12,"pages","","",4,null],[12,"books","","",4,null],[12,"genres","","",4,null],[11,"new","","Constructs TheBook",4,[[["string",3],["u16",15]]]],[11,"change_title","","Changes title",4,[[["string",3]]]],[11,"change_author","","Changes author",4,[[["string",3]]]],[11,"change_pages","","Changes amount of pages",4,[[["u16",15]]]],[11,"get_unused","","Return index of unused book. If all are used, it will …",4,[[],[["option",4],["usize",15]]]],[11,"find_by_reader","","Finds using book by reader",4,[[["rc",3]],[["option",4],["usize",15]]]],[11,"remove_book","","Remove simple book by index. If index is incorrect, it …",4,[[["usize",15]],[["result",4],["u8",15]]]],[11,"remove_all_books","","Removes all simple books",4,[[]]],[11,"add_genre","","Adds new genre to book If this genre is already exists, …",4,[[["string",3]],["bool",15]]],[11,"remove_genre","","Removes genre from book If this genre is found, it will …",4,[[["string",3]],["bool",15]]],[6,"ResultSelf","booklibrs::books","Error-handling type. If everything is ok, it should …",null,null],[8,"BookInterface","","<strong>DEPRECATED</strong>",null,null],[10,"change_title","","Changes title of the book",5,[[["string",3]]]],[10,"change_author","","Changes author of the book",5,[[["string",3]]]],[10,"change_pages","","Changes amount of pages of the book",5,[[["u16",15]]]],[0,"reading","booklibrs","",null,null],[0,"read_base","booklibrs::reading","",null,null],[3,"ReaderBase","booklibrs::reading::read_base","Reader Base structure, which contains only readers",null,null],[12,"readers","","",6,null],[11,"new","","Creates empty Reader Base",6,[[]]],[11,"find_reader","","Searches reader by his params. If ok returns index, else …",6,[[["date",3],["string",3]],[["option",4],["usize",15]]]],[11,"add_reader_unchecked","","Adds reader by params. No checks provided",6,[[["date",3],["string",3]]]],[11,"add_reader","","Adds reader by params. If reader with same params exists, …",6,[[["date",3],["string",3]],[["result",4],["u8",15]]]],[11,"remove_reader_unchecked","","Removes reader by params. No checks provided",6,[[["usize",15]]]],[11,"remove_reader","","Removes reader by params. If reader with same params …",6,[[["usize",15]],[["result",4],["u8",15]]]],[11,"change_name_unchecked","","Changes reader\'s name. No checks provided",6,[[["usize",15],["string",3]]]],[11,"change_name","","Changes reader\'s name. If reader with same params isn\'t …",6,[[["usize",15],["string",3]],[["result",4],["u8",15]]]],[11,"change_family_unchecked","","Changes reader\'s 2-nd name. No checks provided",6,[[["usize",15],["string",3]]]],[11,"change_family","","Changes reader\'s 2-nd name. If reader with same params …",6,[[["usize",15],["string",3]],[["result",4],["u8",15]]]],[11,"change_father_unchecked","","Changes reader\'s mid. name. No checks provided",6,[[["usize",15],["string",3]]]],[11,"change_father","","Changes reader\'s mid. name. If reader with same params …",6,[[["usize",15],["string",3]],[["result",4],["u8",15]]]],[11,"change_age_unchecked","","Changes reader\'s age. No checks provided",6,[[["usize",15],["date",3]]]],[11,"change_age","","Changes reader\'s age. If reader with same params isn\'t …",6,[[["usize",15],["string",3],["vec",3]],[["result",4],["u8",15]]]],[11,"len","","Returns amount of readers",6,[[],["usize",15]]],[11,"get_book","","Returns book (or None) which is read by reader now",6,[[["usize",15]],[["weak",3],["option",4]]]],[11,"clear","","Deletes all readers from current Reade Base (But not …",6,[[]]],[11,"save","","Saves everything to .yaml file",6,[[]]],[11,"load","","Loads everything from .yaml file",6,[[]]],[0,"reader","booklibrs::reading","",null,null],[3,"Reader","booklibrs::reading::reader","Reader structure, which contains name, family, father, …",null,null],[12,"name","","",7,null],[12,"family","","",7,null],[12,"father","","",7,null],[12,"birth","","",7,null],[12,"books","","",7,null],[12,"reading","","",7,null],[11,"new","","Creates new Reader with chosen 1-st name, 2-nd name, mid. …",7,[[["date",3],["string",3]]]],[11,"age","","",7,[[],["u16",15]]],[11,"find_book_first","","Find book by smart pointer. If ok, returns index of the …",7,[[["rc",3]],[["option",4],["usize",15]]]],[11,"find_book_last","","Find book by smart pointer. If ok, returns index of the …",7,[[["rc",3]],[["option",4],["usize",15]]]],[11,"start_reading","","Function, that uses after giving book to reader. Adds …",7,[[["rc",3]]]],[11,"finish_reading","","Function, that uses after giving book to reader. Sets …",7,[[]]],[11,"remove_book","","Removes book",7,[[["book",3]]]],[11,"remove_all_books","","Removes all simple books. Used to delete reader",7,[[]]],[11,"change_name","","Changes reader\'s name",7,[[["string",3]],[["result",4],["u8",15]]]],[11,"change_family","","Changes reader\'s 2-nd name",7,[[["string",3]],[["result",4],["u8",15]]]],[11,"change_father","","Changes reader\'s mid. name",7,[[["string",3]],[["result",4],["u8",15]]]],[11,"change_age","","Changes reader\'s birthday",7,[[["date",3]]]],[0,"change","booklibrs","",null,null],[0,"input1","booklibrs::change","",null,null],[3,"Input1","booklibrs::change::input1","Changes one value",null,null],[12,"wind","","",8,null],[12,"ok","","",8,null],[12,"what","","",8,null],[12,"input","","",8,null],[11,"new","","Creates window with asking message and 1 input label",8,[[["str",15]]]],[0,"input2","booklibrs::change","",null,null],[3,"Input2","booklibrs::change::input2","Changes two values",null,null],[12,"wind","","",9,null],[12,"ok","","",9,null],[12,"what1","","",9,null],[12,"input1","","",9,null],[12,"what2","","",9,null],[12,"input2","","",9,null],[11,"new","","Creates window with asking message and 2 input labels",9,[[["str",15]]]],[0,"input3","booklibrs::change","",null,null],[3,"Input3","booklibrs::change::input3","Changes three values",null,null],[12,"wind","","",10,null],[12,"ok","","",10,null],[12,"what1","","",10,null],[12,"input1","","",10,null],[12,"what2","","",10,null],[12,"input2","","",10,null],[12,"what3","","",10,null],[12,"input3","","",10,null],[11,"new","","Creates window with asking message and 3 input labels",10,[[["str",15]]]],[0,"input4","booklibrs::change","",null,null],[3,"Input4","booklibrs::change::input4","Changes four values",null,null],[12,"wind","","",11,null],[12,"ok","","",11,null],[12,"what1","","",11,null],[12,"input1","","",11,null],[12,"what2","","",11,null],[12,"input2","","",11,null],[12,"what3","","",11,null],[12,"input3","","",11,null],[12,"what4","","",11,null],[12,"input4","","",11,null],[11,"new","","Creates window with asking message and 4 input labels",11,[[["str",15]]]],[8,"Inputable","booklibrs::change","Trait for change messages.",null,null],[10,"get_wind","","Gets menu\'s window",12,[[],["rc",3]]],[10,"set_input","","Returns input by vector of strings if everything is ok …",12,[[],[["result",4],["vec",3]]]],[11,"shown","","Checks if window is shown",12,[[],["bool",15]]],[11,"hide","","Hides window",12,[[]]],[11,"show","","Shows window",12,[[]]],[0,"actions","booklibrs","",null,null],[0,"book","booklibrs::actions","",null,null],[0,"add_rem","booklibrs::actions::book","",null,null],[0,"full","booklibrs::actions::book::add_rem","",null,null],[5,"add_books","booklibrs::actions::book::add_rem::full","Function that add simple books. If number of books to add …",null,[[["genres",3],["app",3],["booksystem",3],["readerbase",3],["caretaker",3],["lang",4]]]],[5,"remove_book","","Function that removes simple books. It takes index of …",null,[[["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[5,"add_book","","<strong>DEPRECATED</strong>",null,[[["genres",3],["app",3],["booksystem",3],["readerbase",3],["caretaker",3],["lang",4]]]],[5,"remove_the_book","","Function that removes all simple books and TheBook. If …",null,[[["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[0,"simple","booklibrs::actions::book::add_rem","",null,null],[5,"remove_the_book_simple","booklibrs::actions::book::add_rem::simple","Removes already known the book",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["lang",4]]]],[5,"add_books_simple","","Adds simple books to already known the book",null,[[["usize",15],["genres",3],["app",3],["booksystem",3],["readerbase",3],["caretaker",3],["lang",4]]]],[5,"remove_book_simple","","Removes one simple book from known the book",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[5,"remove_book_simple2","","Removes one known simple book from known the book",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["lang",4]]]],[5,"add_book_simple","","Adds known The Book",null,[[["app",3],["lang",4],["booksystem",3],["vec",3]]]],[0,"change","booklibrs::actions::book","",null,null],[0,"full","booklibrs::actions::book::change","",null,null],[5,"change_title","booklibrs::actions::book::change::full","Function that changes title of all simple books and …",null,[[["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[5,"change_author","","Function that changes author of all simple books and …",null,[[["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[5,"change_pages","","Function that changes pages of all simple books and …",null,[[["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[5,"change_location","","Function that changes location of simple book. If you …",null,[[["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[0,"simple","booklibrs::actions::book::change","",null,null],[5,"change_title_simple","booklibrs::actions::book::change::simple","Changing title of already known book",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[5,"change_author_simple","","Changing author of already known book",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[5,"change_pages_simple","","Changing amount of pages of already known book",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[5,"change_location_simple","","",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[0,"info","booklibrs::actions::book","",null,null],[0,"full","booklibrs::actions::book::info","",null,null],[5,"the_book_info","booklibrs::actions::book::info::full","Function that gives all information about TheBook: title, …",null,[[["genres",3],["caretaker",3],["refcell",3],["app",3],["lang",4],["rc",3],["rc",3],["refcell",3]]]],[5,"book_info","","Function that gives all information about simple Book: …",null,[[["app",3],["lang",4],["booksystem",3]]]],[5,"show_all_books","","Function that shows all information about all existing …",null,[[["rc",3],["refcell",3],["lang",4]]]],[0,"simple","booklibrs::actions::book::info","",null,null],[4,"MessageTheBook","booklibrs::actions::book::info::simple","Messages for info menu for The Book",null,null],[13,"ChangeTitle","","",13,null],[13,"ChangeAuthor","","",13,null],[13,"ChangePages","","",13,null],[13,"RemoveThis","","",13,null],[13,"RemoveSimple","","",13,null],[13,"AddSimple","","",13,null],[5,"book_info_simple","","Function that gives information about already known …",null,[[["app",3],["lang",4],["booksystem",3],["weak",3],["option",4]]]],[5,"the_book_info_simple","","Function that returns info of already known the book",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[0,"utils","booklibrs::actions::book","",null,null],[5,"empty_inp_book","booklibrs::actions::book::utils","Function that checks if input was empty",null,[[["vec",3],["lang",4]],["bool",15]]],[5,"check_book","","Function that checks if input is correct. Returns index …",null,[[["vec",3],["lang",4],["booksystem",3]],[["usize",15],["result",4]]]],[0,"genres","booklibrs::actions","",null,null],[5,"add_genre","booklibrs::actions::genres","Function that adds new genre. If you have mistakes in …",null,[[["app",3],["lang",4],["booksystem",3],["readerbase",3],["caretaker",3],["genres",3]]]],[5,"remove_genre","","Function that removes genre. If you have mistakes in …",null,[[["app",3],["lang",4],["booksystem",3],["readerbase",3],["caretaker",3],["genres",3]]]],[5,"customize_book_genre","","Function that changes title of all simple books and …",null,[[["genres",3],["app",3],["booksystem",3],["readerbase",3],["caretaker",3],["lang",4]]]],[5,"find_by_genre_simple","","",null,[[["booksystem",3],["lang",4],["string",3]]]],[5,"find_by_genre","","Function that shows all books with specific genre",null,[[["app",3],["lang",4],["booksystem",3]]]],[5,"all_genres","","Function that shows all books with specific genre",null,[[["refcell",3],["app",3],["lang",4],["booksystem",3],["rc",3]]]],[0,"giveaway","booklibrs::actions","",null,null],[0,"full","booklibrs::actions::giveaway","",null,null],[5,"change_return_date","booklibrs::actions::giveaway::full","Changes return date",null,[[["genres",3],["app",3],["booksystem",3],["readerbase",3],["caretaker",3],["lang",4]]]],[5,"give_book","","Function that gives book to reader. It requires you to …",null,[[["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[5,"get_book","","Function that gives book to reader. It requires you to …",null,[[["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[0,"simple","booklibrs::actions::giveaway","",null,null],[5,"give_book_known_reader","booklibrs::actions::giveaway::simple","Gives book to known reader",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]],[["string",3],["option",4]]]],[5,"get_book_known_reader","","Gets book from known reader",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]],["option",4]]],[5,"change_return_date_simple","","Changes return date of already known book",null,[[["genres",3],["app",3],["booksystem",3],["readerbase",3],["option",4],["caretaker",3],["lang",4]],["option",4]]],[0,"tables","booklibrs::actions","",null,null],[5,"draw_header","booklibrs::actions::tables","Function that draws borders of the table",null,[[["i32",15],["str",15]]]],[5,"draw_data","","Function that draws cells in table",null,[[["color",3],["i32",15],["bool",15],["option",4],["str",15]]]],[5,"cell_reader","","Function that returns String with reader\'s data and color.…",null,[[["lang",4],["booksystem",3],["readerbase",3],["i32",15]]]],[5,"cell_reader2","","Function that returns String with reader\'s data and color.…",null,[[["weak",3],["refcell",3],["i32",15]],["string",3]]],[5,"cell_book","","Function that returns String book\'s with data. If column …",null,[[["booksystem",3],["i32",15]],["string",3]]],[5,"cell_book2","","Function that returns name, 2-nd name, mid name and age …",null,[[["usize",15],["i32",15],["readerbase",3],["booksystem",3]],["string",3]]],[5,"cell_book3","","Function that returns String book\'s with spec genre.",null,[[["lang",4],["vec",3],["i32",15]],["string",3]]],[5,"cell_date_time","","Function that returns date and time as string.",null,[[["i32",15]],["string",3]]],[5,"cell_genre","","Function that returns book\'s genre as string.",null,[[["lang",4],["rc",3],["i32",15]],["string",3]]],[5,"cell_genre2","","Function that returns genre as string.",null,[[["genres",3],["i32",15]],["string",3]]],[0,"read","booklibrs::actions","",null,null],[0,"add_rem","booklibrs::actions::read","",null,null],[0,"full","booklibrs::actions::read::add_rem","",null,null],[5,"add_reader","booklibrs::actions::read::add_rem::full","Function that adds reader. If you have mistakes in input, …",null,[[["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[5,"remove_reader","","Function that removes reader. If you have mistakes in …",null,[[["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[0,"simple","booklibrs::actions::read::add_rem","",null,null],[5,"remove_reader_simple","booklibrs::actions::read::add_rem::simple","Removes already known reader",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["lang",4]]]],[0,"change","booklibrs::actions::read","",null,null],[0,"full","booklibrs::actions::read::change","",null,null],[5,"change_name","booklibrs::actions::read::change::full","Function that changes reader\'s name. If you have mistakes …",null,[[["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[5,"change_family","","Function that changes reader\'s second name. If you have …",null,[[["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[5,"change_father","","Function that changes reader\'s middle name. If you have …",null,[[["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[5,"change_age","","Function that changes reader\'s age. If you have mistakes …",null,[[["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[0,"simple","booklibrs::actions::read::change","",null,null],[5,"change_name_simple","booklibrs::actions::read::change::simple","Change name of already known reader",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]],[["string",3],["option",4]]]],[5,"change_family_simple","","Change 2-nd name of already known reader",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]],[["string",3],["option",4]]]],[5,"change_father_simple","","Change middle name of already known reader",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]],[["string",3],["option",4]]]],[5,"change_age_simple","","Changes age of already known reader",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]],[["option",4],["u16",15]]]],[0,"info","booklibrs::actions::read","",null,null],[0,"full","booklibrs::actions::read::info","",null,null],[5,"reader_info","booklibrs::actions::read::info::full","Function that gives info about reader. If you have …",null,[[["genres",3],["caretaker",3],["refcell",3],["app",3],["lang",4],["rc",3],["rc",3],["refcell",3]]]],[0,"simple","booklibrs::actions::read::info","",null,null],[4,"MessageReader","booklibrs::actions::read::info::simple","Messages for info menu",null,null],[13,"ChangeName","","",14,null],[13,"ChangeFamily","","",14,null],[13,"ChangeFather","","",14,null],[13,"ChangeAge","","",14,null],[13,"GiveBook","","",14,null],[13,"GetBook","","",14,null],[13,"RemoveThis","","",14,null],[5,"reader_info_simple","","Function that gives information about already known reader",null,[[["usize",15],["genres",3],["readerbase",3],["booksystem",3],["caretaker",3],["app",3],["lang",4]]]],[0,"utils","booklibrs::actions::read","",null,null],[5,"empty_inp_reader","booklibrs::actions::read::utils","Function that checks if input was empty",null,[[["vec",3],["lang",4]],["bool",15]]],[5,"check_reader","","Function that checks if input is correct. Returns index …",null,[[["readerbase",3],["vec",3],["lang",4]],[["usize",15],["result",4]]]],[5,"get_book_ind","","Function that returns index of simple book. Panics if …",null,[[["booksystem",3]],["usize",15]]],[0,"restore","booklibrs","",null,null],[0,"caretaker","booklibrs::restore","",null,null],[3,"Caretaker","booklibrs::restore::caretaker","",null,null],[12,"mementos","","",15,null],[12,"ind","","",15,null],[11,"new","","Creates new caretaker",15,[[]]],[11,"get_memento_back","","Gets reference to previous memento",15,[[["genres",3],["readerbase",3],["booksystem",3]]]],[11,"get_memento_forward","","Gets reference to next memento",15,[[["genres",3],["readerbase",3],["booksystem",3]]]],[11,"add_memento","","Adds new state",15,[[["readerbase",3],["genres",3],["booksystem",3]]]],[11,"pop","","Removes last memento",15,[[]]],[0,"memento","booklibrs::restore","",null,null],[3,"Memento","booklibrs::restore::memento","Collects data about reader base, book system and genres",null,null],[12,"state","","",16,null],[11,"new","","Creates new state",16,[[["readerbase",3],["genres",3],["booksystem",3]]]],[11,"get_state","","Gets state",16,[[]]],[0,"tests","booklibrs","",null,null],[0,"book_test","booklibrs::tests","",null,null],[0,"date_tests","booklibrs::tests::book_test","Tests for Date, Book and TheBookDate tests",null,null],[0,"book_tests","","Book tests",null,null],[0,"the_book_tests","","TheBook tests",null,null],[0,"reader_test","booklibrs::tests","",null,null],[0,"reader_tests","booklibrs::tests::reader_test","Test for Reader and ReaderBaseReader tests",null,null],[0,"reader_base_tests","","ReaderBase tests",null,null],[4,"Lang","booklibrs","Language. Helps to choose preferred language",null,null],[13,"English","","",17,null],[13,"Russian","","",17,null],[11,"new","","Creates new localization. Reads from file",17,[[]]],[11,"change","","Changes language in file",17,[[["lang",4]]]],[11,"from","booklibrs::books::book","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","booklibrs::books::book_sys","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","booklibrs::books::date","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","booklibrs::books::genres","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","booklibrs::books::the_book","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","booklibrs::reading::read_base","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","booklibrs::reading::reader","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","booklibrs::change::input1","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","booklibrs::change::input2","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","booklibrs::change::input3","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","booklibrs::change::input4","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","booklibrs::actions::book::info::simple","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","booklibrs::actions::read::info::simple","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","booklibrs::restore::caretaker","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","booklibrs::restore::memento","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","booklibrs","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"get_wind","booklibrs::change::input1","",8,[[],["rc",3]]],[11,"set_input","","",8,[[],[["result",4],["vec",3]]]],[11,"get_wind","booklibrs::change::input2","",9,[[],["rc",3]]],[11,"set_input","","",9,[[],[["result",4],["vec",3]]]],[11,"get_wind","booklibrs::change::input3","",10,[[],["rc",3]]],[11,"set_input","","",10,[[],[["result",4],["vec",3]]]],[11,"get_wind","booklibrs::change::input4","",11,[[],["rc",3]]],[11,"set_input","","",11,[[],[["result",4],["vec",3]]]],[11,"drop","booklibrs::books::book","Destructor for simple book. It is used to debug code.",0,[[]]],[11,"drop","booklibrs::books::the_book","Destructor for TheBook. It is used to debug code",4,[[]]],[11,"drop","booklibrs::reading::reader","Destructor for Reader. It\'s used to debug code",7,[[]]],[11,"from","booklibrs::books::date","Constructor from chrono\'s library dates",2,[[["local",3],["datetime",3]]]],[11,"from","booklibrs::books::genres","Constructs genres from vector",3,[[["string",3],["vec",3]]]],[11,"from","","Constructs genres from hash set",3,[[["hashset",3],["string",3]]]],[11,"from","","Constructs genres from btree set",3,[[["string",3],["btreeset",3]]]],[11,"into_iter","","Convert genres to iterator",3,[[]]],[11,"clone","booklibrs::books::date","",2,[[],["date",3]]],[11,"clone","booklibrs::books::genres","",3,[[],["genres",3]]],[11,"clone","booklibrs::reading::read_base","Clones Reader Base with new readers\' smart pointers",6,[[]]],[11,"clone","booklibrs::reading::reader","Clones reader Clears all books pointer. After that Book …",7,[[]]],[11,"clone_from","","Clones reader from another reader",7,[[]]],[11,"clone","booklibrs::actions::book::info::simple","",13,[[],["messagethebook",4]]],[11,"clone","booklibrs::actions::read::info::simple","",14,[[],["messagereader",4]]],[11,"clone","booklibrs::restore::memento","Clones Memento with new Reader Base, Book System and …",16,[[]]],[11,"clone","booklibrs","",17,[[],["lang",4]]],[11,"default","booklibrs::books::book","",0,[[],["book",3]]],[11,"default","booklibrs::books::genres","",3,[[],["genres",3]]],[11,"default","booklibrs::restore::caretaker","",15,[[],["caretaker",3]]],[11,"default","booklibrs","Creates default localization. By default it\'s english",17,[[]]],[11,"cmp","booklibrs::books::date","Dates can be compared as >, <, >=, <= (as it works in …",2,[[],["ordering",4]]],[11,"eq","booklibrs::books::book","Compares simple books on equality with pointers\' address",0,[[],["bool",15]]],[11,"eq","booklibrs::books::date","",2,[[["date",3]],["bool",15]]],[11,"ne","","",2,[[["date",3]],["bool",15]]],[11,"eq","booklibrs::books::the_book","Compare TheBooks by title, author and pages.",4,[[],["bool",15]]],[11,"eq","booklibrs::reading::reader","Compare Reader by == / != by their params",7,[[],["bool",15]]],[11,"eq","booklibrs","",17,[[["lang",4]],["bool",15]]],[11,"partial_cmp","booklibrs::books::date","Dates can be compared as >, <, >=, <= (as it works in …",2,[[],[["option",4],["ordering",4]]]],[11,"fmt","booklibrs::books::book","Print for simple book. It is used to debug code.",0,[[["formatter",3]],["result",6]]],[11,"fmt","booklibrs::books::book_sys","Print for BookSystem. It is used for debug code",1,[[["formatter",3]],["result",6]]],[11,"fmt","booklibrs::books::date","",2,[[["formatter",3]],["result",6]]],[11,"fmt","booklibrs::books::genres","",3,[[["formatter",3]],["result",6]]],[11,"fmt","booklibrs::books::the_book","Print for TheBook. It is used to debug code",4,[[["formatter",3]],["result",6]]],[11,"fmt","booklibrs::reading::read_base","Print for Reader Base. It used to debug code",6,[[["formatter",3]],["result",6]]],[11,"fmt","booklibrs::reading::reader","Print for Reader. It\'s used to debug code",7,[[["formatter",3]],["result",6]]],[11,"fmt","booklibrs::restore::caretaker","",15,[[["formatter",3]],["result",6]]],[11,"fmt","booklibrs::restore::memento","",16,[[["formatter",3]],["result",6]]],[11,"fmt","booklibrs","",17,[[["formatter",3]],["result",6]]],[11,"fmt","booklibrs::books::date","Displays date as string.",2,[[["formatter",3]],["result",6]]],[11,"sub","","Difference between two dates in years (>= 0)",2,[[]]],[11,"from_iter","booklibrs::books::genres","Constructs set of genres from iterator of strings",3,[[["intoiterator",8]]]]],"p":[[3,"Book"],[3,"BookSystem"],[3,"Date"],[3,"Genres"],[3,"TheBook"],[8,"BookInterface"],[3,"ReaderBase"],[3,"Reader"],[3,"Input1"],[3,"Input2"],[3,"Input3"],[3,"Input4"],[8,"Inputable"],[4,"MessageTheBook"],[4,"MessageReader"],[3,"Caretaker"],[3,"Memento"],[4,"Lang"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);